name: Trigger auto deployment for mokkiovi backend to Azure Container Apps

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: 
      [ "master", "main" ]
    paths:
    - 'backend/**'
    - '.github/**'
  pull_request: # TODO: Remove me before merging

  # Allow manual trigger 
  workflow_dispatch:      

env:
  BACKEND_PATH: "./backend"
  PYTHON_VERSION: "3.11" 

jobs:
  backend-test:
    # Separate job for tests, so test dependencies are not part of prod build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python version
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create and start virtual environment
        working-directory: ${{ env.BACKEND_PATH }}
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        working-directory: ${{ env.BACKEND_PATH }}
        run: pip install -r test-requirements.txt

      - name: Run tests
        working-directory: ${{ env.BACKEND_PATH }}
        run: |
          pytest -v --cov=. tests
  
  backend-build:
    runs-on: ubuntu-latest
    needs: backend-test

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to container registry
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          context: ./backend
          target: mokkiovi


  backeend-deploy:
    runs-on: ubuntu-latest
    needs: backend-build
    
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SP_CREDENTIALS }}


      - name: Deploy to containerapp
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp registry set -n ${{ secrets.AZURE_CONTAINER_APP_NAME }} -g ${{ secrets.AZURE_RESOURCE_GROUP }} --server docker.io --username  ${{ secrets.DOCKER_REGISTRY_USERNAME }} --password ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
            az containerapp update -n ${{ secrets.AZURE_CONTAINER_APP_NAME }} -g ${{ secrets.AZURE_RESOURCE_GROUP }} --image ${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.sha }}